'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
train <- readCsvData("../data/train.csv")
## map missing data by provided feature
require(Amelia)
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
# Adapted from https://github.com/wehrley/wehrley.github.io/blob/master/SOUPTONUTS.md
library(ggplot2)
# file.path: path of CSV file to be read
# column.types:  type of each column
# missing.types: string corresponding to missing data
readCsvData <- function(file.path, column.types, missing.types) {
read.csv( file.path
colClasses=column.types,
na.strings=missing.types )
}
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
train <- readCsvData("../data/train.csv")
## map missing data by provided feature
require(Amelia)
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
library(Amelia)
install(Amelia)
install.packages("Amelia")
# Adapted from https://github.com/wehrley/wehrley.github.io/blob/master/SOUPTONUTS.md
library(ggplot2)
# file.path: path of CSV file to be read
# column.types:  type of each column
# missing.types: string corresponding to missing data
readCsvData <- function(file.path, column.types, missing.types) {
read.csv( file.path
colClasses=column.types,
na.strings=missing.types )
}
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
train <- readCsvData("../data/train.csv")
## map missing data byattribute
# install.packages("Amelia")
require(Amelia)
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
png("1_Survival_by_Age.png", width=800, height=600)
hist(train$Age[which(train$Survived == "0")], main= "Passenger Age Histogram", xlab="Age", ylab="Count", col =3,
breaks=seq(0,80,by=2))
hist(train$Age[which(train$Survived == "1")], col =2, add = T, breaks=seq(0,80,by=2))
dev.off()
# We can inspect the train data. The results of this are printed in the log tab below
summary(train)
passengers <- read.csv("train.csv",
comment.char="", quote="\"", sep=",", header=TRUE, stringsAsFactors=FALSE,
colClasses=c("integer", "integer", "integer", "character", "character", "numeric", "integer", "integer", "character", "numeric", "character", "character"))
passengers$Survived <- factor(passengers$Survived)
# Sample ggplot2-based plots for exploratory analysis
print(qplot(Sex, data=passengers, fill=Survived))
print(qplot(Fare, data=passengers, colour=Survived, geom="density"))
print(qplot(Age, data=passengers, colour=Survived, geom="density"))
print(qplot(Pclass, data=passengers, colour=Survived, geom="density"))
print(qplot(SibSp , data=passengers, colour=Survived, geom="density"))
print(qplot(Parch , data=passengers, colour=Survived, geom="density"))
print(qplot(Embarked, data=passengers, colour=Survived, geom="density"))
# Adapted from https://github.com/wehrley/wehrley.github.io/blob/master/SOUPTONUTS.md
library(ggplot2)
# file.path: path of CSV file to be read
# column.types:  type of each column
# missing.types: string corresponding to missing data
readCsvData <- function(file.path, column.types, missing.types) {
read.csv( file.path
colClasses=column.types,
na.strings=missing.types )
}
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
train <- readCsvData("../data/train.csv")
## map missing data byattribute
# install.packages("Amelia")
require(Amelia)
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
#
# png("1_Survival_by_Age.png", width=800, height=600)
# hist(train$Age[which(train$Survived == "0")], main= "Passenger Age Histogram", xlab="Age", ylab="Count", col =3,
#      breaks=seq(0,80,by=2))
# hist(train$Age[which(train$Survived == "1")], col =2, add = T, breaks=seq(0,80,by=2))
# dev.off()
#
# # We can inspect the train data. The results of this are printed in the log tab below
# summary(train)
#
# passengers <- read.csv("train.csv",
#                        comment.char="", quote="\"", sep=",", header=TRUE, stringsAsFactors=FALSE,
#                        colClasses=c("integer", "integer", "integer", "character", "character", "numeric", "integer", "integer", "character", "numeric", "character", "character"))
#
# passengers$Survived <- factor(passengers$Survived)
#
# # Sample ggplot2-based plots for exploratory analysis
# print(qplot(Sex, data=passengers, fill=Survived))
# print(qplot(Fare, data=passengers, colour=Survived, geom="density"))
# print(qplot(Age, data=passengers, colour=Survived, geom="density"))
# print(qplot(Pclass, data=passengers, colour=Survived, geom="density"))
# print(qplot(SibSp , data=passengers, colour=Survived, geom="density"))
# print(qplot(Parch , data=passengers, colour=Survived, geom="density"))
# print(qplot(Embarked, data=passengers, colour=Survived, geom="density"))
# Adapted from https://github.com/wehrley/wehrley.github.io/blob/master/SOUPTONUTS.md
library(ggplot2)
# file.path: path of CSV file to be read
# column.types:  type of each column
# missing.types: string corresponding to missing data
readCsvData <- function(file.path, column.types, missing.types) {
read.csv( file.path
colClasses=column.types,
na.strings=missing.types )
}
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
train <- readCsvData("../data/train.csv")
## map missing data byattribute
# install.packages("Amelia")
require(Amelia)
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
#
# png("1_Survival_by_Age.png", width=800, height=600)
# hist(train$Age[which(train$Survived == "0")], main= "Passenger Age Histogram", xlab="Age", ylab="Count", col =3,
#      breaks=seq(0,80,by=2))
# hist(train$Age[which(train$Survived == "1")], col =2, add = T, breaks=seq(0,80,by=2))
# dev.off()
#
# # We can inspect the train data. The results of this are printed in the log tab below
# summary(train)
#
# passengers <- read.csv("train.csv",
#                        comment.char="", quote="\"", sep=",", header=TRUE, stringsAsFactors=FALSE,
#                        colClasses=c("integer", "integer", "integer", "character", "character", "numeric", "integer", "integer", "character", "numeric", "character", "character"))
#
# passengers$Survived <- factor(passengers$Survived)
#
# # Sample ggplot2-based plots for exploratory analysis
# print(qplot(Sex, data=passengers, fill=Survived))
# print(qplot(Fare, data=passengers, colour=Survived, geom="density"))
# print(qplot(Age, data=passengers, colour=Survived, geom="density"))
# print(qplot(Pclass, data=passengers, colour=Survived, geom="density"))
# print(qplot(SibSp , data=passengers, colour=Survived, geom="density"))
# print(qplot(Parch , data=passengers, colour=Survived, geom="density"))
# print(qplot(Embarked, data=passengers, colour=Survived, geom="density"))
cat("\014")
# Adapted from https://github.com/wehrley/wehrley.github.io/blob/master/SOUPTONUTS.md
library(ggplot2)
# file.path: path of CSV file to be read
# column.types:  type of each column
# missing.types: string corresponding to missing data
readCsvData <- function(file.path, column.types, missing.types) {
read.csv( file.path
colClasses=column.types,
na.strings=missing.types )
}
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
train <- readCsvData("../data/train.csv")
## map missing data byattribute
# install.packages("Amelia")
require(Amelia)
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
#
# png("1_Survival_by_Age.png", width=800, height=600)
# hist(train$Age[which(train$Survived == "0")], main= "Passenger Age Histogram", xlab="Age", ylab="Count", col =3,
#      breaks=seq(0,80,by=2))
# hist(train$Age[which(train$Survived == "1")], col =2, add = T, breaks=seq(0,80,by=2))
# dev.off()
#
# # We can inspect the train data. The results of this are printed in the log tab below
# summary(train)
#
# passengers <- read.csv("train.csv",
#                        comment.char="", quote="\"", sep=",", header=TRUE, stringsAsFactors=FALSE,
#                        colClasses=c("integer", "integer", "integer", "character", "character", "numeric", "integer", "integer", "character", "numeric", "character", "character"))
#
# passengers$Survived <- factor(passengers$Survived)
#
# # Sample ggplot2-based plots for exploratory analysis
# print(qplot(Sex, data=passengers, fill=Survived))
# print(qplot(Fare, data=passengers, colour=Survived, geom="density"))
# print(qplot(Age, data=passengers, colour=Survived, geom="density"))
# print(qplot(Pclass, data=passengers, colour=Survived, geom="density"))
# print(qplot(SibSp , data=passengers, colour=Survived, geom="density"))
# print(qplot(Parch , data=passengers, colour=Survived, geom="density"))
# print(qplot(Embarked, data=passengers, colour=Survived, geom="density"))
# Adapted from https://github.com/wehrley/wehrley.github.io/blob/master/SOUPTONUTS.md
library(ggplot2)
# file.path: path of CSV file to be read
# column.types:  type of each column
# missing.types: string corresponding to missing data
readCsvData <- function(file.path, column.types, missing.types) {
read.csv(file.path, colClasses=column.types, na.strings=missing.types)
}
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
train <- readCsvData("../data/train.csv")
## map missing data byattribute
# install.packages("Amelia")
require(Amelia)
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
#
# png("1_Survival_by_Age.png", width=800, height=600)
# hist(train$Age[which(train$Survived == "0")], main= "Passenger Age Histogram", xlab="Age", ylab="Count", col =3,
#      breaks=seq(0,80,by=2))
# hist(train$Age[which(train$Survived == "1")], col =2, add = T, breaks=seq(0,80,by=2))
# dev.off()
#
# # We can inspect the train data. The results of this are printed in the log tab below
# summary(train)
#
# passengers <- read.csv("train.csv",
#                        comment.char="", quote="\"", sep=",", header=TRUE, stringsAsFactors=FALSE,
#                        colClasses=c("integer", "integer", "integer", "character", "character", "numeric", "integer", "integer", "character", "numeric", "character", "character"))
#
# passengers$Survived <- factor(passengers$Survived)
#
# # Sample ggplot2-based plots for exploratory analysis
# print(qplot(Sex, data=passengers, fill=Survived))
# print(qplot(Fare, data=passengers, colour=Survived, geom="density"))
# print(qplot(Age, data=passengers, colour=Survived, geom="density"))
# print(qplot(Pclass, data=passengers, colour=Survived, geom="density"))
# print(qplot(SibSp , data=passengers, colour=Survived, geom="density"))
# print(qplot(Parch , data=passengers, colour=Survived, geom="density"))
# print(qplot(Embarked, data=passengers, colour=Survived, geom="density"))
getwd()
setwd("c:/github/kaggle-fiddling/R")
setwd("/github/kaggle-fiddling/R")
setwd("/github/kaggle-fiddling/titanic/R")
getwd()
# Adapted from https://github.com/wehrley/wehrley.github.io/blob/master/SOUPTONUTS.md
setwd("/github/kaggle-fiddling/titanic/R")
library(ggplot2)
# file.path: path of CSV file to be read
# column.types:  type of each column
# missing.types: string corresponding to missing data
readCsvData <- function(file.path, column.types, missing.types) {
read.csv(file.path, colClasses=column.types, na.strings=missing.types)
}
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
train <- readCsvData("../data/train.csv")
## map missing data byattribute
# install.packages("Amelia")
require(Amelia)
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
#
# png("1_Survival_by_Age.png", width=800, height=600)
# hist(train$Age[which(train$Survived == "0")], main= "Passenger Age Histogram", xlab="Age", ylab="Count", col =3,
#      breaks=seq(0,80,by=2))
# hist(train$Age[which(train$Survived == "1")], col =2, add = T, breaks=seq(0,80,by=2))
# dev.off()
#
# # We can inspect the train data. The results of this are printed in the log tab below
# summary(train)
#
# passengers <- read.csv("train.csv",
#                        comment.char="", quote="\"", sep=",", header=TRUE, stringsAsFactors=FALSE,
#                        colClasses=c("integer", "integer", "integer", "character", "character", "numeric", "integer", "integer", "character", "numeric", "character", "character"))
#
# passengers$Survived <- factor(passengers$Survived)
#
# # Sample ggplot2-based plots for exploratory analysis
# print(qplot(Sex, data=passengers, fill=Survived))
# print(qplot(Fare, data=passengers, colour=Survived, geom="density"))
# print(qplot(Age, data=passengers, colour=Survived, geom="density"))
# print(qplot(Pclass, data=passengers, colour=Survived, geom="density"))
# print(qplot(SibSp , data=passengers, colour=Survived, geom="density"))
# print(qplot(Parch , data=passengers, colour=Survived, geom="density"))
# print(qplot(Embarked, data=passengers, colour=Survived, geom="density"))
# Adapted from https://github.com/wehrley/wehrley.github.io/blob/master/SOUPTONUTS.md
setwd("/github/kaggle-fiddling/titanic/R")
library(ggplot2)
# file.path: path of CSV file to be read
# column.types:  type of each column
# missing.types: string corresponding to missing data
readCsvData <- function(file.path, column.types, missing.types) {
read.csv(file.path, colClasses=column.types, na.strings=missing.types)
}
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
train <- readCsvData("../data/train.csv", train.column.types, missing.types)
## map missing data byattribute
# install.packages("Amelia")
require(Amelia)
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
#
# png("1_Survival_by_Age.png", width=800, height=600)
# hist(train$Age[which(train$Survived == "0")], main= "Passenger Age Histogram", xlab="Age", ylab="Count", col =3,
#      breaks=seq(0,80,by=2))
# hist(train$Age[which(train$Survived == "1")], col =2, add = T, breaks=seq(0,80,by=2))
# dev.off()
#
# # We can inspect the train data. The results of this are printed in the log tab below
# summary(train)
#
# passengers <- read.csv("train.csv",
#                        comment.char="", quote="\"", sep=",", header=TRUE, stringsAsFactors=FALSE,
#                        colClasses=c("integer", "integer", "integer", "character", "character", "numeric", "integer", "integer", "character", "numeric", "character", "character"))
#
# passengers$Survived <- factor(passengers$Survived)
#
# # Sample ggplot2-based plots for exploratory analysis
# print(qplot(Sex, data=passengers, fill=Survived))
# print(qplot(Fare, data=passengers, colour=Survived, geom="density"))
# print(qplot(Age, data=passengers, colour=Survived, geom="density"))
# print(qplot(Pclass, data=passengers, colour=Survived, geom="density"))
# print(qplot(SibSp , data=passengers, colour=Survived, geom="density"))
# print(qplot(Parch , data=passengers, colour=Survived, geom="density"))
# print(qplot(Embarked, data=passengers, colour=Survived, geom="density"))
# Adapted from https://github.com/wehrley/wehrley.github.io/blob/master/SOUPTONUTS.md
setwd("/github/kaggle-fiddling/titanic/R")
library(ggplot2)
# file.path: path of CSV file to be read
# column.types:  type of each column
# missing.types: string corresponding to missing data
readCsvData <- function(file.path, column.types, missing.types) {
read.csv(file.path, colClasses=column.types, na.strings=missing.types)
}
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
train <- readCsvData("../data/train.csv", train.column.types, missing.types)
## map missing data byattribute
# install.packages("Amelia")
require(Amelia)
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
#
# png("1_Survival_by_Age.png", width=800, height=600)
# hist(train$Age[which(train$Survived == "0")], main= "Passenger Age Histogram", xlab="Age", ylab="Count", col =3,
#      breaks=seq(0,80,by=2))
# hist(train$Age[which(train$Survived == "1")], col =2, add = T, breaks=seq(0,80,by=2))
# dev.off()
#
# # We can inspect the train data. The results of this are printed in the log tab below
# summary(train)
#
# passengers <- read.csv("train.csv",
#                        comment.char="", quote="\"", sep=",", header=TRUE, stringsAsFactors=FALSE,
#                        colClasses=c("integer", "integer", "integer", "character", "character", "numeric", "integer", "integer", "character", "numeric", "character", "character"))
#
# passengers$Survived <- factor(passengers$Survived)
#
# # Sample ggplot2-based plots for exploratory analysis
# print(qplot(Sex, data=passengers, fill=Survived))
# print(qplot(Fare, data=passengers, colour=Survived, geom="density"))
# print(qplot(Age, data=passengers, colour=Survived, geom="density"))
# print(qplot(Pclass, data=passengers, colour=Survived, geom="density"))
# print(qplot(SibSp , data=passengers, colour=Survived, geom="density"))
# print(qplot(Parch , data=passengers, colour=Survived, geom="density"))
# print(qplot(Embarked, data=passengers, colour=Survived, geom="density"))
cat("\014")
# Adapted from https://github.com/wehrley/wehrley.github.io/blob/master/SOUPTONUTS.md
setwd("/github/kaggle-fiddling/titanic/R")
library(ggplot2)
# file.path: path of CSV file to be read
# column.types:  type of each column
# missing.types: string corresponding to missing data
readCsvData <- function(file.path, column.types, missing.types) {
read.csv(file.path, colClasses=column.types, na.strings=missing.types)
}
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
train <- readCsvData("../data/train.csv", train.column.types, missing.types)
## map missing data byattribute
# install.packages("Amelia")
require(Amelia)
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
cat("\014")
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
R.Version()
train
missmap(train)
summary(train$Age)
tabComplete <- data.frame(a = 1:10, b = 11:20, c = 21:30)
missmap(tabComplete) # everything plotted missing
tabComplete <- data.frame(a = 1:10, b = 11:20, c = NULL)
missmap(tabComplete) # everything plotted missing
tabComplete <- data.frame(a = 1:10, b = 11:20, c = NA)
missmap(tabComplete) # everything plotted missing
